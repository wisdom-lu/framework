<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/task        
						http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<aop:aspectj-autoproxy />
	<!-- 注解驱动 -->
	<mvc:annotation-driven/>
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.wafersystems"></context:component-scan>
	
	 <!-- add by baidan -->
	 <task:annotation-driven/>
	 <!-- add end -->
	  <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="2000000000"/>  
    </bean>  
      
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsps/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">customAdManger/error_fileupload</prop>  
            </props>  
        </property>  
    </bean>
	<!-- 定义国际化消息 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
		<property name="useCodeAsDefaultMessage" value="true"/>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	
	<!-- spring messageconveter 使用了iso8859-1编码  导致ajax会乱码 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
	<property name="messageConverters">   
	         <list>   
	             <bean class = "org.springframework.http.converter.StringHttpMessageConverter">   
	                <property name = "supportedMediaTypes">
	                      <list>
	                          <value>text/html;charset=UTF-8</value>   
	                     </list>   
	                </property>   
	             </bean>   
	         </list>   
	   </property>  
	</bean> 
	
	<mvc:interceptors>  
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
	</mvc:interceptors>
	
	<!--<mvc:interceptors>  
      <bean class="com.wafersystem.filter.LogInterceptor" />
    </mvc:interceptors> 
	
	--><!-- spring messageconveter 使用了iso8859-1编码  导致ajax会乱码 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
	<property name="messageConverters">   
	         <list>   
	             <bean class = "org.springframework.http.converter.StringHttpMessageConverter">   
	                <property name = "supportedMediaTypes">
	                      <list>
	                          <value>text/html;charset=UTF-8</value>   
	                     </list>   
	                </property>   
	             </bean>   
	         </list>   
	   </property>  
	</bean> 
	
	<bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/classes/jdbc.properties</value>
                <value>/WEB-INF/classes/redis.properties</value>
            </list>
        </property>
    </bean>
	
	<!-- 定义数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${userName}" />
		<property name="password" value="${password}" />
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<property name="packagesToScan">
			<list>
				<value>com.wafersystems.wificloud.auth.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl">update</prop>
			</props>
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置事物的传播特性 (事物通知)-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" no-rollback-for="javax.jms.JMSException"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" no-rollback-for="javax.jms.JMSException"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"  no-rollback-for="javax.jms.JMSException"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor pointcut="execution(* com.wafersystem.service.*.*(..))" advice-ref="txAdvice"/>
	</aop:config>
	
	<bean id="AppContext" class="org.framework.h4.utils.AppContext"> </bean>
	
	
	<!--  redis Configurations -->
	<!-- <context:property-placeholder location="/WEB-INF/classes/redis.properties" ignore-unresolvable="true" />  --> 
	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
	 	 <property name="maxTotal"  value="${redis.maxTotal}" /> 
	     <property name="maxIdle" value="${redis.maxIdle}" /> 
	     <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
	        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
	        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
	 </bean>
 
 <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
  <constructor-arg ref="jedisPoolConfig" />
  <constructor-arg value="${redis.host}" />
  <constructor-arg type="int" value="${redis.port}" />
 </bean>
 
 <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
  <property name="hostName"  value="${redis.host}" />
  <property name="port"  value="${redis.port}" />
  <property name="password" value="${redis.pass}"/>
  <property name="timeout"  value="${redis.timeout}" />
  <property name="poolConfig"  ref="jedisPoolConfig" />
  <property name="usePool"  value="true" />
 </bean>
 
 <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
  <property name="connectionFactory" ref="jedisConnFactory"/>
 </bean>
	
</beans>
